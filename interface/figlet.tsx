// Simple Figlet font implementation (Standard font)
export const figletFont = {
    'A': [
        '    _    ',
        '   / \\   ',
        '  / _ \\  ',
        ' / ___ \\ ',
        '/_/   \\_\\'
    ],
    'B': [
        ' ____  ',
        '| __ ) ',
        '|  _ \\ ',
        '| |_) |',
        '|____/ '
    ],
    'C': [
        '  ____ ',
        ' / ___|',
        '| |    ',
        '| |___ ',
        ' \\____|'
    ],
    'D': [
        ' ____  ',
        '|  _ \\ ',
        '| | | |',
        '| |_| |',
        '|____/ '
    ],
    'E': [
        ' _____ ',
        '| ____|',
        '|  _|  ',
        '| |___ ',
        '|_____|'
    ],
    'F': [
        ' _____ ',
        '|  ___|',
        '| |_   ',
        '|  _|  ',
        '|_|    '
    ],
    'G': [
        '  ____ ',
        ' / ___|',
        '| |  _ ',
        '| |_| |',
        ' \\____|'
    ],
    'H': [
        ' _   _ ',
        '| | | |',
        '| |_| |',
        '|  _  |',
        '|_| |_|'
    ],
    'I': [
        ' ___ ',
        '|_ _|',
        ' | | ',
        ' | | ',
        '|___|'
    ],
    'J': [
        '     _ ',
        '    | |',
        ' _  | |',
        '| |_| |',
        ' \\___/ '
    ],
    'K': [
        ' _  __',
        '| |/ /',
        '| \\ / ',
        '| |\\ ',
        '|_| \\_'
    ],
    'L': [
        ' _     ',
        '| |    ',
        '| |    ',
        '| |___ ',
        '|_____|'
    ],
    'M': [
        ' __  __ ',
        '|  \\/  |',
        '| |\\/| |',
        '| |  | |',
        '|_|  |_|'
    ],
    'N': [
        ' _   _ ',
        '| \\ | |',
        '|  \\| |',
        '| |\\  |',
        '|_| \\_|'
    ],
    'O': [
        '  ___  ',
        ' / _ \\ ',
        '| | | |',
        '| |_| |',
        ' \\___/ '
    ],
    'P': [
        ' ____  ',
        '|  _ \\ ',
        '| |_) |',
        '|  __/ ',
        '|_|    '
    ],
    'Q': [
        '  ___  ',
        ' / _ \\ ',
        '| | | |',
        '| |_| |',
        ' \\__\\_\\'
    ],
    'R': [
        ' ____  ',
        '|  _ \\ ',
        '| |_) |',
        '|  _ < ',
        '|_| \\_\\'
    ],
    'S': [
        ' ____  ',
        '/ ___| ',
        '\\___ \\ ',
        ' ___) |',
        '|____/ '
    ],
    'T': [
        ' _____ ',
        '|_   _|',
        '  | |  ',
        '  | |  ',
        '  |_|  '
    ],
    'U': [
        ' _   _ ',
        '| | | |',
        '| | | |',
        '| |_| |',
        ' \\___/ '
    ],
    'V': [
        '__     __',
        '\\ \\   / /',
        ' \\ \\ / / ',
        '  \\ V /  ',
        '   \\_/   '
    ],
    'W': [
        '__        __',
        '\\ \\      / /',
        ' \\ \\ /\\ / / ',
        '  \\ V  V /  ',
        '   \\_/\\_/   '
    ],
    'X': [
        '__  __',
        '\\ \\/ /',
        ' \\  / ',
        ' /  \\ ',
        '/_/\\_\\'
    ],
    'Y': [
        '__   __',
        '\\ \\ / /',
        ' \\ V / ',
        '  | |  ',
        '  |_|  '
    ],
    'Z': [
        ' _____',
        '|__  /',
        '  / / ',
        ' / /_ ',
        '/____|'
    ],
    '0': [
        '  ___  ',
        ' / _ \\ ',
        '| | | |',
        '| |_| |',
        ' \\___/ '
    ],
    '1': [
        ' _ ',
        '/ |',
        '| |',
        '| |',
        '|_|'
    ],
    '2': [
        ' ____  ',
        '|___ \\ ',
        '  __) |',
        ' / __/ ',
        '|_____|'
    ],
    '3': [
        ' _____ ',
        '|___ / ',
        '  |_ \\ ',
        ' ___) |',
        '|____/ '
    ],
    '4': [
        ' _  _   ',
        '| || |  ',
        '| || |_ ',
        '|__   _|',
        '   |_|  '
    ],
    '5': [
        ' ____  ',
        '| ___| ',
        '|___ \\ ',
        ' ___) |',
        '|____/ '
    ],
    '6': [
        '  __   ',
        ' / /_  ',
        '| |_   ',
        '| |_) |',
        '|____/ '
    ],
    '7': [
        ' _____ ',
        '|___  |',
        '   / / ',
        '  / /  ',
        ' /_/   '
    ],
    '8': [
        '  ___  ',
        ' ( _ ) ',
        ' / _ \\ ',
        '| (_) |',
        ' \\___/ '
    ],
    '9': [
        '  ___  ',
        ' / _ \\ ',
        '| (_) |',
        ' \\__, |',
        '   /_/ '
    ],
    ' ': [
        '  ',
        '  ',
        '  ',
        '  ',
        '  '
    ],
    '.': [
        '    ',
        '    ',
        '    ',
        '    ',
        ' __ '
    ],
    ',': [
        '    ',
        '    ',
        '    ',
        ' _  ',
        '(_) '
    ],
    '!': [
        ' _ ',
        '| |',
        '| |',
        '|_|',
        '(_)'
    ],
    '?': [
        ' ___ ',
        '|__ \\',
        '  / /',
        ' |_| ',
        ' (_) '
    ],
    '-': [
        '      ',
        '      ',
        ' ____ ',
        '|____|',
        '      '
    ],
    '_': [
        '        ',
        '        ',
        '        ',
        '        ',
        ' ______ '
    ],
    '+': [
        '       ',
        '   _   ',
        ' _| |_ ',
        '|_   _|',
        '  |_|  '
    ],
    '=': [
        '        ',
        ' ______ ',
        '|______|',
        '|______|',
        '        '
    ],
    '*': [
        '      ',
        ' _/\\_  ',
        '|    | ',
        ' \\/\\/ ',
        '      '
    ],
    '/': [
        '    __',
        '   / /',
        '  / / ',
        ' / /  ',
        '/_/   '
    ],
    '\\': [
        '__    ',
        '\\ \\   ',
        ' \\ \\  ',
        '  \\ \\ ',
        '   \\_\\'
    ],
    '|': [
        ' _ ',
        '| |',
        '| |',
        '| |',
        '|_|'
    ],
    '(': [
        '  __',
        ' / /',
        '| | ',
        '| | ',
        ' \\_\\'
    ],
    ')': [
        '__  ',
        '\\ \\ ',
        ' | |',
        ' | |',
        '/_/ '
    ],
    '[': [
        ' __ ',
        '| _|',
        '| | ',
        '| | ',
        '|__|'
    ],
    ']': [
        ' __ ',
        '|_ |',
        ' | |',
        ' | |',
        '|__|'
    ],
    '{': [
        '  __',
        ' / /',
        '| | ',
        ' \\ \\',
        '  \\_\\'
    ],
    '}': [
        '__  ',
        '\\ \\ ',
        ' | |',
        '/ / ',
        '/_/  '
    ],
    '<': [
        '  __',
        ' / /',
        '/ / ',
        '\\ \\ ',
        ' \\_\\'
    ],
    '>': [
        '__  ',
        '\\ \\ ',
        ' \\ \\',
        ' / /',
        '/_/ '
    ],
    '&': [
        '  ___   ',
        ' ( _ )  ',
        ' / _ \\/\\',
        '| (_>  <',
        ' \\___/\\/ '
    ],
    '@': [
        '  ____  ',
        ' / __ \\ ',
        '/ / _` |',
        '\\ \\__,_|',
        ' \\____/ '
    ],
    '#': [
        '  _  _  ',
        '_| || |_',
        '|_  ..  _|',
        '|_      _|',
        '  |_||_| '
    ],
    '$': [
        ' _  ',
        '| | ',
        '/ __)',
        '\\__ \\',
        '(   /',
        ' |_| '
    ],
    '%': [
        ' _  __',
        '(_)/ /',
        '  / / ',
        ' / /(_)',
        '/_/   '
    ],
    '^': [
        ' /\\ ',
        '|/  \\|',
        '     ',
        '     ',
        '     '
    ],
    '~': [
        '      ',
        ' /\\/\\ ',
        '|    |',
        '      ',
        '      '
    ]
};

// Function to convert text to Figlet ASCII art
export const textToFiglet = (text: string): string => {
    // Convert text to uppercase since our font only has uppercase letters
    const upperText = text.toUpperCase();
    
    // Initialize array for each line of the output
    const outputLines = ['', '', '', '', ''];
    
    // Process each character
    for (const char of upperText) {
        // Get the figlet character or use space if not found
        const figletChar = figletFont[char as keyof typeof figletFont] || figletFont[' '];
        
        // Add each line of the figlet character to the corresponding output line
        for (let i = 0; i < figletChar.length; i++) {
            outputLines[i] += figletChar[i];
        }
    }
    
    // Join the lines with newlines
    return outputLines.join('\n');
};
